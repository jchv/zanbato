// Code generated by "stringer -type=Kind"; DO NOT EDIT.

package kaitai

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[U1-1]
	_ = x[U2le-2]
	_ = x[U2be-3]
	_ = x[U4le-4]
	_ = x[U4be-5]
	_ = x[U8le-6]
	_ = x[U8be-7]
	_ = x[S1-8]
	_ = x[S2le-9]
	_ = x[S2be-10]
	_ = x[S4le-11]
	_ = x[S4be-12]
	_ = x[S8le-13]
	_ = x[S8be-14]
	_ = x[Bits-15]
	_ = x[F4le-16]
	_ = x[F4be-17]
	_ = x[F8le-18]
	_ = x[F8be-19]
	_ = x[Bytes-20]
	_ = x[String-21]
	_ = x[User-22]
}

const _Kind_name = "U1U2leU2beU4leU4beU8leU8beS1S2leS2beS4leS4beS8leS8beBitsF4leF4beF8leF8beBytesStringUser"

var _Kind_index = [...]uint8{0, 2, 6, 10, 14, 18, 22, 26, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 77, 83, 87}

func (i Kind) String() string {
	i -= 1
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
